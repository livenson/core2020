#!/bin/bash
# iptables firewall for common LAMP servers.
#
# This file should be located at /etc/firewall.bash, and is meant to work with
# Jeff Geerling's firewall init script.

# No spoofing.
if [ -e /proc/sys/net/ipv4/conf/all/rp_filter ]
then
for filter in /proc/sys/net/ipv4/conf/*/rp_filter
do
echo 1 > $filter
done
fi

# Completely reset the firewall by removing all rules and chains.
iptables -P INPUT ACCEPT
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT
iptables -t nat -F
iptables -t mangle -F
iptables -F
iptables -X

# Accept traffic from loopback interface (localhost).
iptables -A INPUT -i lo -j ACCEPT

# Open ports.
iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT

  iptables -A OUTPUT -p tcp -m tcp --dport 22 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 8080 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 995 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 110 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 143 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 993 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 21 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 5222 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6660 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6661 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6662 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6663 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6664 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6665 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6666 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6667 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6668 -j ACCEPT
  iptables -A OUTPUT -p tcp -m tcp --dport 6669 -j ACCEPT


iptables -A OUTPUT -p icmp -j ACCEPT
iptables -A OUTPUT -d 10.3.1.2 -p tcp -m tcp --dport 53 -j ACCEPT
iptables -A OUTPUT -d 10.3.1.3 -p tcp -m tcp --dport 53 -j ACCEPT
iptables -A OUTPUT -d 10.3.1.2 -p udp -m udp --dport 53 -j ACCEPT
iptables -A OUTPUT -d 10.3.1.3 -p udp -m udp --dport 53 -j ACCEPT

# Accept icmp ping requests.
iptables -A INPUT -p icmp -j ACCEPT

# Allow NTP traffic for time synchronization.
iptables -A OUTPUT -p udp --dport 123 -j ACCEPT
iptables -A INPUT -p udp --sport 123 -j ACCEPT

# Allow established connections:
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Log EVERYTHING (ONLY for Debug).
# iptables -A INPUT -j LOG

iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Drop all other traffic.
iptables -A INPUT -j DROP
iptables -A OUTPUT -j DROP



# Configure IPv6 if ip6tables is present.
if [ -x "$(which ip6tables 2>/dev/null)" ]; then

  # Remove all rules and chains.
  ip6tables -P INPUT ACCEPT
  ip6tables -P FORWARD DROP
  ip6tables -P OUTPUT ACCEPT
  ip6tables -t nat -F
  ip6tables -t mangle -F
  ip6tables -F
  ip6tables -X

  # Accept traffic from loopback interface (localhost).
  ip6tables -A INPUT -i lo -j ACCEPT

  # Open ports.
    ip6tables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
  ip6tables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
  ip6tables -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 22 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 8080 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 995 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 110 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 143 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 993 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 21 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 5222 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6660 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6661 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6662 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6663 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6664 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6665 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6666 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6667 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6668 -j ACCEPT
  ip6tables -A OUTPUT -p tcp -m tcp --dport 6669 -j ACCEPT


  ip6tables -A OUTPUT -p icmp -j ACCEPT
  ip6tables -A OUTPUT -d fd01:10:3:1::2 -p tcp -m tcp --dport 53 -j ACCEPT
  ip6tables -A OUTPUT -d fd01:10:3:1::3 -p tcp -m tcp --dport 53 -j ACCEPT
  ip6tables -A OUTPUT -d fd01:10:3:1::2 -p udp -m udp --dport 53 -j ACCEPT
  ip6tables -A OUTPUT -d fd01:10:3:1::3 -p udp -m udp --dport 53 -j ACCEPT

  # Accept icmp ping requests.
  ip6tables -A INPUT -p icmpv6 -j ACCEPT
  ip6tables -A INPUT -s fe80::/10 -j ACCEPT
  ip6tables -A INPUT -d ff00::/8 -j ACCEPT

  # Allow NTP traffic for time synchronization.
  ip6tables -A OUTPUT -p udp --dport 123 -j ACCEPT
  ip6tables -A INPUT -p udp --sport 123 -j ACCEPT

  # Allow established connections:
  ip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

  # Log EVERYTHING (ONLY for Debug).
  # ip6tables -A INPUT -j LOG

  ip6tables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

  # Drop all other traffic.
  ip6tables -A INPUT -j DROP
  ip6tables -A OUTPUT -j DROP

fi
